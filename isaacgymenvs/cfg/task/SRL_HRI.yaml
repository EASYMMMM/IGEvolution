# used to create the object
name: SRL_HRI

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
env: 
  numEnvs: ${resolve_default:4096,${...num_envs}}
  envSpacing: 5
  episodeLength: 1000
  cameraFollow: True # if the camera follows humanoid or not
  enableDebugVis: False
  
  pdControl: True
  forceControl: True
  powerScale: 1.0
  controlFrequencyInv: 2 # 30 Hz
  stateInit: "Default"  # Default, Random, Hybrid
  hybridInitProb: 0.5
  numAMPObsSteps: 2

  localRootObs: False
  contactBodies: ["right_foot", "left_foot","right_shin","left_shin"]
  terminationHeight: 0.6
  SRLterminationHeight: 0.70 
  enableEarlyTermination: True

  # animation files to learn from
  # these motions should use hyperparameters from HumanoidAMPPPO.yaml
  motion_file: "amp_humanoid_walk.npy"
  #motion_file: "amp_humanoid_run.npy"
  #motion_file: "amp_humanoid_dance.npy"

  # these motions should use hyperparameters from HumanoidAMPPPOLowGP.yaml
  #motion_file: "amp_humanoid_hop.npy"
  #motion_file: "amp_humanoid_backflip.npy"
  srl_endpos_obs: False
  
  asset:
    assetFileName: "mjcf/srl_hri/srl_hri_basic.xml"

  plane:
    staticFriction: 1.0
    dynamicFriction: 1.0
    restitution: 0.0

  humanoid_obs_num: 111
  srl_obs_num: 37
  srl_obs_frame_stack: 5  
  srl_command_num: 3
  humanoid_actions_num: 28
  srl_actions_num: 6
  srl_free_actions_num: 3
 
  gait_period: 18.0
  foot_clearance: 0.2

  deathCost: -1.0
  srlTerminationHeight: 0.75

  # reward weights
  alive_reward_scale: 1.0
  torques_cost_scale: 5e-6
  progress_reward_scale: 1
  dof_acc_cost_scale: 0.5
  dof_vel_cost_scale: 1
  dof_pos_cost_sacle: 0.05
  no_fly_penalty_scale: 10.0
  gait_similarity_penalty_scale: 10
  pelvis_height_reward_scale: 5.0
  orientation_reward_scale: 3.0
  tracking_ang_vel_reward_scale: 2.0
  vel_tracking_reward_scale: 6.0
  clearance_penalty_scale: 50
  lateral_distance_penalty_scale: 30
  actions_rate_scale: 0.1
  actions_smoothness_scale: 0.1
  
  torque_threshold: 50  # 力矩惩罚施加阈值
  upper_reward_w: 1 
  srl_torque_reward_w: 0.0005 # 外肢体力矩惩罚 torque cost 
  srl_load_cell_w: 0.00      # 力矩传感器惩罚 
  srl_root_force_reward_w: 0 # 外肢体根部受力惩罚
  srl_feet_slip_w: 0    # 末端滑动惩罚
  autogen_model: True  # 模型自动生成
  load_cell: True      # 背板处受力传感器
  humanoid_load_cell_obs: False      # Humanoid 观测中是否添加load cell
  srl_partial_obs: False             # SRL使用部分观测，指的是不包含Humanoid相关观测

  design_param_obs: False
  design_params:
    mode: mode1
    first_leg_lenth: 0.40
    first_leg_size: 0.03
    second_leg_lenth: 0.80
    second_leg_size: 0.03
    third_leg_size: 0.03
  # ------------ ------------

sim:
  dt: 0.0166 # 1/60 s
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 0
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 10.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 2 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 600   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 3000
    actor_params:
      humanoid:
        color: True
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 3000
        rigid_shape_properties:
          friction:
            num_buckets: 500
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          restitution:
            range: [0., 0.7]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
        dof_properties:
          damping: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          stiffness: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 3000

